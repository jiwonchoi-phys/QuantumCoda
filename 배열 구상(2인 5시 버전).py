#배열

# 타일 수 (0~5)*2=12 가정

#@@@@@@@@@@@@@@@@@@@@@@@게임 시작시 배열@@@@@@@@@@@@@@@@@@@@@@@
#-------------------------타일--------------------------------
tn=6                    #타일 넘버: 5번까지 총 6개 타일
tb=list(range(0,tn))    #타일 블랙: 검은 타일 묶음 생성
tw=list(range(0,tn))    #타일 화이트

# 아래는 각 타일에 대응하는 spooky 숫자(가정)
tb[0] = [0, 4]
tb[1] = [1, 3] #검은 타일 2번: spooky number 1, 3
tb[2] = [2, 1]
tb[3] = [3, 5]
tb[4] = [4, 0]
tb[5] = [5, 2]

tw[0] = [5, 1]
tw[1] = [4, 3]
tw[2] = [3, 0]
tw[3] = [2, 5]
tw[4] = [1, 2]
tw[5] = [0, 4] #흰 타일 6번: 0, 2
#--------------------------------------------------------------


pn = 2                  #플레이어 넘버: 총 플레이어 수
p = list(range(0,pn))   #플레이 묶음 생성
stn = 4                 #스타팅 타일 넘버: 시작시 받는 타일 개수 (4개 가정)

                    
p[0] = [tb[1],tw[2], tw[5], tb[2]] #[[1, 3], [3, 0], [0, 4], [2, 1]]
p[1] = [tw[4],tb[3], tb[0], tb[5]] #[[1, 2], [3, 5], [0, 4], [5, 2]]

#============spooky 숫자 정렬=====================================
for i in list(range(0,pn)): # 플레이어 전체에 대해
    li = p[i] #임시 리스트 생성
    print("전) 플레이어",i,"의 타일", li) #과정 확인
    for k in list(range(0,stn)):
        if li[k][0] < li[k][1]: # 두 spooky 수 고려 작으면 놔둠
            pass
        else:   #다르면 교환 후 저장
            li[k][0], li[k][1] = li[k][1], li[k][0]
            p[i]= li

for i in list(range(0,pn)):
    print("후) 플레이어",i,"의 타일", p[i])

#===================================================================
print() #구별용
#===========평균값 정렬============================================= 
for q in range(0,stn): #완전히 섞기 위해 반복 횟수 stn 수로 잡음
    for i in list(range(0,pn)): # 플레이어 전체에 대해
        li = p[i] #임시 리스트
        print(q,"회 교환) 플레이어",i,"의 타일과 spooky 수", li) #변경 확인
        for k in list(range(0,stn-1)):
            if li[k][0]+li[k][1] <= li[k+1][0]+li[k+1][1]: # 두 spooky 수 평균값 고려 작으면 놔둠
                pass
        
            else:   #다르면 교환 후 저장
                    li[k+1], li[k] = li[k], li[k+1]
                    p[i]= li

for i in list(range(0,pn)):
    print("후) 플레이어",i+1,"의 타일과 spooky 수", p[i])
#===================================================================

#TODO 평균값 중복시 배열순서 추가 & 3인 테스트 & 패를 먹은후 배열 & 붕괴 후 배열
# +) 배열후 타일 색상을 다시 알려주기 위해, 색상정보 기억하고 마지막에 정보 추가 과정
